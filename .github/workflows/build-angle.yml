name: Build ANGLE

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/build-angle.yml'
      - 'build-angle-*.sh'
      - 'build-angle-*.bat'
      - 'setup-angle-*.sh'
      - 'setup-angle-*.bat'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/build-angle.yml'
      - 'build-angle-*.sh'
      - 'build-angle-*.bat'
      - 'setup-angle-*.sh'
      - 'setup-angle-*.bat'

jobs:
  build-mac:
    name: Build ANGLE for macOS
    runs-on: macos-14
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade certifi

      - name: Make Scripts Executable
        run: |
          chmod +x setup-angle-mac.sh
          chmod +x build-angle-mac.sh

      - name: Build ANGLE for macOS
        run: |
          ./build-angle-mac.sh

      - name: Check Build Output
        run: |
          ls -la build/mac/universal/
          otool -L build/mac/universal/libGLESv2.dylib
          ls -la build/mac/universal/include/

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-mac
          path: |
            build/mac/universal/*.dylib
            build/mac/universal/include/
          retention-days: 7

  build-ios:
    name: Build ANGLE for iOS
    runs-on: macos-14
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade certifi

      - name: Make Scripts Executable
        run: |
          chmod +x setup-angle-mac.sh
          chmod +x build-angle-ios.sh

      - name: Build ANGLE for iOS
        run: |
          ./build-angle-ios.sh

      - name: Check Build Output
        run: |
          ls -la build/ios/universal/
          find build/ios/universal -name "Headers" | xargs ls -la

      - name: Upload iOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-ios
          path: build/ios/universal/*.xcframework
          retention-days: 7

  build-windows:
    name: Build ANGLE for Windows
    runs-on: windows-2022
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Visual Studio Components
        uses: microsoft/setup-msbuild@v1

      - name: Setup Windows Build Environment
        shell: cmd
        run: |
          pip install --upgrade pip
          pip install pywin32

      - name: Build ANGLE for Windows (x64 and ARM64)
        shell: cmd
        run: |
          call build-angle-windows.bat
          if %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%

      - name: Check Build Output
        shell: cmd
        run: |
          dir build\windows\x64
          dir build\windows\x64\include
          dir build\windows\arm64
          dir build\windows\arm64\include

      - name: Upload Windows x64 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-windows-x64
          path: |
            build/windows/x64/*.dll
            build/windows/x64/*.lib
            build/windows/x64/include/
          retention-days: 7

      - name: Upload Windows ARM64 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-windows-arm64
          path: |
            build/windows/arm64/*.dll
            build/windows/arm64/*.lib
            build/windows/arm64/include/
          retention-days: 7